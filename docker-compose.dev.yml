version: "3.8"

services:
  just_chat:
    build:
      dockerfile: Dockerfile.dev
    volumes:
      - ./src/:/just_chat/src:ro
      - ./alembic:/just_chat/alembic
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBIT_URL=amqp://user:password@rabbit:5672/
      - POSTGRES_DSN=postgresql://postgres:postgres@postgres:5432/postgres
      - MONGO_DSN=mongodb://mongo:27017/just_chat
      - MINIO_ENDPOINT=192.168.0.216:9000
      - MINIO_ACCESS_KEY=test
      - MINIO_SECRET_KEY=testsecret
    ports:
      - "8000:8000"
    depends_on:
      notification_service:
        condition: service_started
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started
      rabbit:
        condition: service_healthy
      minio:
        condition: service_started
      redis:
        condition: service_started

  notification_service:
    build:
      dockerfile: Dockerfile.dev
    volumes:
      - ./src/:/just_chat/src:ro
    environment:
      - RABBIT_URL=amqp://user:password@rabbit:5672/
    depends_on:
      rabbit:
        condition: service_healthy
    entrypoint: python -m notification_service

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 20

  mongo:
    image: mongo:latest
    restart: always

  minio:
    image: quay.io/minio/minio:latest
    environment:
      - MINIO_ACCESS_KEY=test
      - MINIO_SECRET_KEY=testsecret
    volumes:
      - ./minio/data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    entrypoint: bash -c "
      mkdir -p /data/images &&
      minio server --console-address ":9001" /data"

  redis:
    image: redis:latest
    environment:
      - REDIS_PASSWORD="redis"
      - REDIS_PORT=6379

  rabbit:
    image: bitnami/rabbitmq
    environment:
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_USER: user
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    entrypoint: rabbitmq-server $@
